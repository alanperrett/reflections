What happens when you initialise a repository, why do you need to do it?

Git creates a .git folder in the location that you initialise. No files are tracked or included in a commit at this stage.

You need to do this to tell Git that this is where it needs to track the files.

How is the staging area different from the working directory and the repository? What value do you think it offers?

Staging area allows you to assemble the files that ae going to be tracked to make a logical commit. The value is that otherwise multiple commits would need to be made, which may not represent a logical unit.

How can you use the staging area to make sure that you have one commit per logical change?
Assemble the files with the changes needed for a single logicl chane in the staging area then commit as one logical change.

What are some situations when branches woudl be helpful in keeping your hisotry organised? 
How would branches help?

If you were adding an experimental feature or trying something risky then branching might make sense. Also if
if there were to be different versions for different hardware platforms that migth make sense.
Branches would help by keeping a known working master brach so that can still be used whenever needed.

How do diagrams help you visualise the branch structure?
Having a diagram to visualise the branck structure mans that it is easy to see where one branch deviates from
another, also what commit are on which branch and what is visible to each branch.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
The result is that all commits on both branches appear on the merged branch. We represent on the diagram in
the way that we do in order to show what commits belong to which branch, and which branches can see which 
commits.


